@RunWith(Theories.class)
public class TestBAOFormGeneration {

    // Existing fields...

    @Before
    public void setUpBeforeClass() {
        factory = Mockito.mock(ServiceFactory.class);
        bookingSvc = Mockito.mock(BookingManager.class);
        referenceSvc = Mockito.mock(Reference.class);
        formSvc = Mockito.mock(FormsManager.class);
        acctTitleSvc = Mockito.mock(AcctTitleService.class);

        MockitoAnnotations.initMocks(this);

        // Existing mock container initialization...

        // Other setup code...

    }

    @Theory
    public void testCertUbo(@FromDataPoints("CERT-UBO") Map<String, String> testData) {
        try {
            given(factory.getService(BookingManager.class)).willReturn(bookingSvc);
            given(factory.getService(Reference.class)).willReturn(referenceSvc);
            given(factory.getService(AcctTitleService.class)).willReturn(acctTitleSvc);
            given(factory.getService(FormsManager.class)).willReturn(formSvc);

            // Existing stubbing code...

            RequestOptions options = new RequestOptions();
            options.setReqUID(UUID.randomUUID().toString());

            given(bookingSvc.getApplication(any(), any(), any())).willAnswer(invocationOnMock -> getApplication(testData.get(APPLICATIONID)));

            // Rest of your test logic...

        } catch (Throwable e) {
            e.printStackTrace();
            Assert.fail(e.toString());
        }
    }

    // Existing methods...
}
