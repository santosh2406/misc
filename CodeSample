 public Token getToken(boolean reload) throws ServiceException {
        log.begin(GET_TOKEN);
        Token token = null;
        try {
            String system = getProperty(this.properties, SYSTEM);
            if (reload || (token = getCachedToken()) == null || token.isTokenExpired() || token.isThresholdLimitReached()) {

                if (reload) {
                    log.info(GET_TOKEN, String.format("Token Reload requested for system:%s", system));
                } else {
                    log.info(GET_TOKEN, String.format("Token is null/expired/thresholdReached for system:%s", system));
                }
                token = getTokenFromHost(system);
                if (atomicReset.compareAndSet(false, true)) {
                    cacheToken(token, system);
                    atomicReset.set(false);
                    log.info(GET_TOKEN, String.format("AtomicReset completed and cached for system:%s", system));
                } else {
                    log.info(GET_TOKEN, "AtomicReset is in progress for reload/expired/thresholdReached token, skipped caching");
                }
            }

        } catch (Exception exception) {
            atomicReset.set(false);
            token = getTokenFromHost(getProperty(this.properties, SYSTEM));
            log.error(GET_TOKEN, "Error occurred during token creation:", exception);
        }
        log.end(GET_TOKEN);
        return token;
    }
