try (PDDocument doc = PDDocument.load(new File("input.pdf"))) {

    PDAcroForm form = doc.getDocumentCatalog().getAcroForm();
    doc.getDocumentCatalog().setAcroForm(form);

    PDTextField textField = (PDTextField) form.getField("Account Number 1");
    textField.setDefaultValue("Enter account number");
    textField.setDefaultAppearance("/Helv 12 Tf 0.7 g");

    // Assuming you're updating the field dynamically in your application
    // Check if the text field value is present
    if (textField.getValueAsString().isEmpty()) {
        // If no value is present, set the border color to red
        PDAppearanceCharacteristicsDictionary fieldAppearance = textField.getAppearanceCharacteristics();
        if (fieldAppearance == null) {
            fieldAppearance = new PDAppearanceCharacteristicsDictionary(new COSDictionary());
            textField.setAppearanceCharacteristics(fieldAppearance);
        }
        fieldAppearance.setBorderColour(new PDColor(new float[]{1, 0, 0}, PDDeviceRGB.INSTANCE));
    } else {
        // If value is present, set the default border color
        PDAppearanceCharacteristicsDictionary fieldAppearance = textField.getAppearanceCharacteristics();
        if (fieldAppearance != null) {
            // Remove the border color to revert to default
            fieldAppearance.getCOSObject().removeItem(COSName.BC);
        }
    }

    doc.save(new File("output.pdf"));
} catch (IOException e) {
    e.printStackTrace();
}
